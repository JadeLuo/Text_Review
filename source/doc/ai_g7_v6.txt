                            g7_server (敏感词筛查) 服务接口说明
                                     v7
                                  编写：李博贤
docker image: hmai:g7_server_v7

ai_g7 v7 版本提供以下ai服务：
》keyword 敏感关键词识别。
》fast nlp 语义分析
》cherry 文本分类

另外，该服务提供关键词管理


docker内部服务端口：5000
===================================================================================================
*************************        【接口1】  主服务接口                   *****************************
===================================================================================================
【综述】
 请求URL 类似于
 http://[域名或ip:端口]/ai（域名和端口只是举例，实际看部署情况 ）

【1：协议类型】
 http协议

【2：支持文字格式】
 str格式

【3：请求方式 】
 POST

【4：请求参数】
***************************************************************************************************

 所有参数都是字符串

下面是一个请求json串举例：

{
 'textdata': '董存瑞，我爱你中国，我的骄傲',
  'debug': 'y',
  'picid': 'test',
  'ais': 'keyword#fnlp#cherry',
  'aigroup': 'ai_g7'
 }



》textdata
需要提交敏感词鉴别的语句


》ais
必须是 "keyword"或者"fnlp"或者"cherry"或者"keyword#fnlp#cherry"(也可用#任意两两组合)

》aigroup
服务名，必须是ai_g7， 不传或传错都报错

》debug
可选。这个参数可以不传，要传只能等于 'y'

》picid
可选。当debug参数为'y'，且给出了 picid时，ai模型返回结果会再返回picid，便于调试。


***************************************************************************************************
5【返回值说明】
》》》 正常返回返回举例 《《《
下面是一个返回的json串,[请求参数中包含可选参数 debug='y', 'picid':'22123456' ]

{
    'result': [
        {
            'model': 'keyword',
            'kind': 'NLP_keyword',
            'mr': [
                {
                    'class': 'kw_political',
                    'words': [
                        {
                            'word': '中国',
                            'num': 1
                        }
                    ]
                }
            ],
            'code': 1
        },
        {
            'model': 'fnlp',
            'kind': 'NLP_mean',
            'mr': [
                {
                    'class': 'normal_politics'
                }
            ],
            'code': '1'
        }
        {
            'model': 'cherry',
            'kind': 'NLP_cherry',
            'mr': [
                {
                    'class': 'political'
                }
            ],
            'code': '1'
        }
    ],
    'pro_ver': '2.1',
    'picid': 'test'
}

》返回字段含义
result：保留字，代表结果集
model: ai模型名
kind： ai模型类名
code：返回码
    对于keyword模型
    0  代表没有发现敏感词
    1  代表发现了敏感词
   -1  代表返回错误
   对于nlp模型
    0  代表未检出涉政
    1  代表检出涉政
   -1  代表返回错误
    对于cherry模型
    0  代表未检出涉政
    1  代表检出涉政
   -1  代表返回错误
mr: 识别结果集，0～多条
    对于keyword模型
    class：敏感分类
    words: 该分类下发现了哪些敏感词
    word：某个敏感词
    num：这个敏感词出现多少次
    对于nlp模型
    class：哪种涉政（'violation_politics' 或 'normal_politics'）
    对于cherry模型
    class：哪种类别（'politics' 或 'porn' 或 'gambling'）
pro_ver: ai服务通讯协议版本号
picid：  debug模式下，回传picid



 》》》错误返回举例《《《

{
    'result': [
        {
            'code': '-1',
            'mr': [],
            'models': 'keywords',
            'error': 'up_qps',
            'error_mes': 'max_s_qps: 10max_5s_qps: 20 at 2019-02-23-15: 18: 57'
        }
    ],
    'pro_ver': '2.0'
}
其中， code 为-1,代表出现了问题，没有进行正常图片识别。
error 是错误标识
error_mes 是提示信息

该模型可能返回的错误信息包括：


exception：  程序内部出错
ainame：     ais参数（模型名）空缺
up_qps：     超出了qps限额
overload：   出现了文字鉴别任务等待超时，抛弃超时任务
aigroup:     没有给出aigroup或给出的aigroup不正确
textdata:    传输了空数据

===================================================================================================
************************              【接口2】  探活接口  areyouok          *************************
===================================================================================================
http://[域名或ip:端口]/areyouok （域名和端口只是举例，实际看部署情况 ）
服务正常：返回字符串  ok
其它返回，或无响应，为不正常
该接口用所有ai模型实际检查一段文字，要注意控制健康检查频度


===================================================================================================
*************************        【接口3】  关于接口  about                **************************
===================================================================================================
http://game.haima.me:5008/about （域名和端口只是举例，实际看部署情况 ）
返回支持的ai识别服务名，中间以；号分隔,类似于
返回：server:ai_g7, aimodel:keyword version:v2


===================================================================================================
**************************           【接口4】  查看有哪些日志文件           *************************
===================================================================================================

http://[域名或ip:端口]/logfiles （域名和端口只是举例，实际看部署情况 ）
返回当前的所有日志文件。
返回举例：
ai-critical.log
ai-debug.log
ai-error.log
ai-error.log.2018-10-24_13
ai-error.log.2018-10-24_17
ai-info.log
ai-info.log.2018-10-24_13
ai-info.log.2018-10-24_15
ai-notset.log
ai-warning.log


===================================================================================================
*************************             【接口5】  查看某个日志文件的内容       *************************
===================================================================================================

http://[域名或ip:端口]/logfile？f=**** （域名和端口只是举例，实际看部署情况 ）
*** 指日志文件名。
请求举例：
crul http://[域名或ip:端口]/logfile？f=ai-info.log.2018-10-30_18
请求返回是该日志文件的内容


===================================================================================================
*************************     【接口6】  检查所有ai服务下面的各细分分类标签    **************************
===================================================================================================
http://[域名或ip:端口]/ais_all （域名和端口只是举例，实际看部署情况 ）
返回文本，列出各ai识别下面的各细分分类

keyword
--------------
0: kw_political  '政治敏感'
1: kw_terrorism  '暴恐违禁'
2: kw_porn       '文本色情'
3: kw_abuse      '言语辱骂'
4: kw_promotion  '恶意推广'


fnlp
--------------
'normal'		     '正常'
'normal_politics'	 '正常涉政'
'violation_politics' '非正常涉政'

cherry
--------------
'normal'		     '正常'
'gambling'	         '赌博'
'porn'               '色情'
'political'          '政治'



===================================================================================================
*************************     【接口8】  promethus metrics 信息接口        **************************
===================================================================================================

通过http://[域名或ip:端口]/metrics 可以返回promethu监控用信息，详见 metrics说明文档
注意：g7_server 不使用GPU，没有GPU信息
===================================================================================================
************************              【接口9】  敏感词增改删查接口  manage          **********************
===================================================================================================
【综述】
 请求URL 类似于
 http://[域名或ip:端口]/manage（域名和端口只是举例，实际看部署情况 ）

【1：协议类型】
 http协议

【2：支持文字格式】
 str格式

【3：请求方式 】
 POST

【4：请求参数】
***************************************************************************************************
所有参数都是字符串
{
 'textdata': '0',
 'debug': 'y',
 'picid': '',
 'loc': 'y',
 'addition_info_in_place_ai': 'y',
 'ais': 'keyword',
 'aigroup': 'ai_g7',
 'todo': 'search',
 'word': '尼玛',
 'kindnum': 4
}

》textdata
此处无需该参数，可填任意字符串


》ais
必须是 "keyword"

》aigroup
服务名，必须是ai_g7， 不传或传错都报错

》debug
可选。这个参数可以不传，要传只能等于 'y'

》picid
可选。当debug参数为'y'，且给出了 picid时，ai模型返回结果会再返回picid，便于调试。

》todo
这里可填写increase、change、delete、search、notice四种选择，分别对应增改删查操作

》word
填写需要操作的词汇或传输的标志位

》kindnum
在进行change和increase操作时，需要对所改或增加的敏感词进行类别选择，此时必须将类别的相应序号写在kindnum中，其余操作时可不填kindnum项
0: kw_political  '政治敏感'
1: kw_terrorism  '暴恐违禁'
2: kw_porn       '文本色情'
3: kw_abuse      '言语辱骂'
4: kw_promotion  '恶意推广'

***************************************************************************************************

5【返回值说明】
》》》 正常返回返回举例 《《《
下面是一个返回的json串,[请求参数中包含可选参数 debug='y', 'picid':'22123456' ]

{"todo": "increase", "code": "1"}
{"todo": "change", "code": "1"}
{"todo": "delete", "code": null}
{"todo": "search", "code": "kw_porn"}

》返回字段含义
todo：所做的操作
code:返回是否成功或类别，-1为该操作失败或找不到该词


 》》》错误返回举例《《《

{"todo": "search", "code": "-1"}

其中， code 为-1,代表出现了问题，没有进行正常进行操作。

